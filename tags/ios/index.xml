<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iOS on cmHubs</title>
    <link>https://Zhangchengmin99.github.io/tags/ios/</link>
    <description>Recent content in iOS on cmHubs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>[ A student iOS developer in BUPT 👨🏻‍💻 ]</copyright>
    <lastBuildDate>Thu, 03 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://Zhangchengmin99.github.io/tags/ios/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Core Data基本简介（一）—— Data Model与Core Data Stack</title>
      <link>https://Zhangchengmin99.github.io/2019/10/core-data%E5%9F%BA%E6%9C%AC%E7%AE%80%E4%BB%8B%E4%B8%80-data-model%E4%B8%8Ecore-data-stack/</link>
      <pubDate>Thu, 03 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://Zhangchengmin99.github.io/2019/10/core-data%E5%9F%BA%E6%9C%AC%E7%AE%80%E4%BB%8B%E4%B8%80-data-model%E4%B8%8Ecore-data-stack/</guid>
      <description>&lt;h4 id=&#34;前言-什么是core-data&#34;&gt;前言 什么是Core Data？&lt;/h4&gt;

&lt;p&gt;Core Data 是一个对象图管理器，它定义和管理自己的对象和连接。 我们可以确定这些对象的组成以及它们之间的关系，还可以根据需要存储尽可能多的对象。 该系统负责对对象进行编码和解码，保持一致性以及以有效方式将对象图存储在文件中。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Application Delegate和ViewController</title>
      <link>https://Zhangchengmin99.github.io/2019/10/application-delegate%E5%92%8Cviewcontroller/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://Zhangchengmin99.github.io/2019/10/application-delegate%E5%92%8Cviewcontroller/</guid>
      <description>&lt;h4 id=&#34;引言-uikit的概念&#34;&gt;引言 UIKit的概念&lt;/h4&gt;

&lt;p&gt;MVC是很多人学习App开发学习的第一种设计模式，深入理解其的含义与组成部分与相互配合，对学习开发有着至关重要的最要。本文简要介绍MVC设计模式与ViewController的相关概念，并说明Application Delegate的相关使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UIView基础介绍</title>
      <link>https://Zhangchengmin99.github.io/2019/10/uiview%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://Zhangchengmin99.github.io/2019/10/uiview%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;h4 id=&#34;引言&#34;&gt;引言&lt;/h4&gt;

&lt;p&gt;窗口是显示图形的空间，但它本身不会产生任何可见的内容。用户界面是通过类似视图的容器在窗口内部构建的。这些视图是自定义大小的矩形区域，旨在在屏幕上显示图形。一些视图仅用作容器，而其他视图则经过改进以提供图形工具（例如按钮和开关）以及图形内容（例如图像和文本）。这些视图是按层次结构组织的，一个内部又另一个内部，以窗口大小的视图作为层次结构的根（通常称为主视图或容器视图）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iOS开发中容易忽略的UIKit概念</title>
      <link>https://Zhangchengmin99.github.io/2019/09/ios%E5%BC%80%E5%8F%91%E4%B8%AD%E5%AE%B9%E6%98%93%E5%BF%BD%E7%95%A5%E7%9A%84uikit%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://Zhangchengmin99.github.io/2019/09/ios%E5%BC%80%E5%8F%91%E4%B8%AD%E5%AE%B9%E6%98%93%E5%BF%BD%E7%95%A5%E7%9A%84uikit%E6%A6%82%E5%BF%B5/</guid>
      <description>&lt;h4 id=&#34;引言-uikit的概念&#34;&gt;引言 UIKit的概念&lt;/h4&gt;

&lt;p&gt;UIKit（用户界面工具包）是为移动应用程序定义图形界面元素的框架。从文本字符串到按钮和开关，用户在屏幕上操纵以与应用程序交互的所有标准元素均由此框架中的类定义。它的主要重点是用户界面，但它也提供了应用程序需要的基本类，并与系统的其余部分连接。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iOS中的重要图形概念Core Graphics</title>
      <link>https://Zhangchengmin99.github.io/2019/09/ios%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E5%9B%BE%E5%BD%A2%E6%A6%82%E5%BF%B5core-graphics/</link>
      <pubDate>Sat, 28 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://Zhangchengmin99.github.io/2019/09/ios%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E5%9B%BE%E5%BD%A2%E6%A6%82%E5%BF%B5core-graphics/</guid>
      <description>&lt;h4 id=&#34;引言&#34;&gt;引言&lt;/h4&gt;

&lt;p&gt;Core Graphics框架是基于Quartz的高级绘图引擎。 它提供了无与伦比的输出保真度和轻量级2D渲染。 使用此框架可以来处理基于路径的绘图，转换，颜色管理，屏幕渲染，图案，渐变和阴影，图像数据管理，图像创建和图像蒙版，以及PDF文档的创建，显示和解析。在macOS中，Core Graphics还包括用于处理显示硬件，用户基础输入事件和窗口系统的服务。本文将重点介绍这套框架下重要的数据类型概念。（几乎是各种组件的基础，十分重要）&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>